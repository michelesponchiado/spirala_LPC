/*******************************************************************************
********************************************************************************
**
** File Name
** ---------
**
** SD.H
**
********************************************************************************
********************************************************************************
**
** Description
** -----------
** Headerfile for the Serial Interface Driver
**
**
********************************************************************************
********************************************************************************
**
** Services List
** -------------
**
** Public Services:
**
**    SD_Init()            - Initializes the Serial Driver
**    SD_GetChar()         - Read a character from the input buffer
**    SD_KbHit()           - Check if we received any characters
**    SD_PutChar()         - Put one character out on the serial line
**
** Private Services:
**
**    sd_RxInterrupt()     - Receive character interrupt
**
********************************************************************************
********************************************************************************
**                                                                            **
** COPYRIGHT NOTIFICATION (c) 1995,96,97,98,99 HMS Fieldbus Systems AB.       **
**                                                                            **
** This program is the property of HMS Fieldbus Systems AB.                   **
** It may not be reproduced, distributed, or used without permission          **
** of an authorised company official.                                         **
**                                                                            **
********************************************************************************
********************************************************************************
**
** Company: HMS Fieldbus Systems AB
**          Pilefeltsgatan 93-95
**          S-302 50  Halmstad
**          SWEDEN
**          Tel:     +46 (0)35 - 17 29 00
**          Fax:     +46 (0)35 - 17 29 09
**          e-mail:  info@hms.se
**
********************************************************************************
********************************************************************************
*/

/*******************************************************************************
********************************************************************************
**
** Change Log
** ----------
**
** Latest Revision:
**
**    Rev 0.10    13 jun 2002   Created
**    Rev 1.00    12 jul 2002   First Release
**
********************************************************************************
********************************************************************************
*/

#ifndef SD_H
#define SD_H


/*******************************************************************************
**
** Constants
**
********************************************************************************
*/

/*------------------------------------------------------------------------------
**
** SD_RX_BUFFER_SIZE
**
**------------------------------------------------------------------------------
*/

#define SD_RX_BUFFER_SIZE     10


/*------------------------------------------------------------------------------
**
** UART register settings
**
**------------------------------------------------------------------------------
*/

#define S0RELL_9600           0x0D9
#define S0RELH_9600           0x03


/*------------------------------------------------------------------------------
**
** 3.5 char timeout on modbus
**
**------------------------------------------------------------------------------
*/

#define MB_MESSAGE_END_9600   4000

/*******************************************************************************
**
** Data Types
**
********************************************************************************
*/

/*------------------------------------------------------------------------------
**
** Internal data type
**
**------------------------------------------------------------------------------
*/

typedef struct sd_DataType
{

   /*
   ** Output enabled flag.
   */

   BOOL fEnabled;

   /*
   ** Ring buffers & buffer pointers.
   */

   UINT8 abRxBuffer[ SD_RX_BUFFER_SIZE ];

   /*
   ** Recievd char put position
   */

   UINT16 iRxGet;

   /*
   ** Recievd char get position
   */

   UINT16 iRxPut;

   /*
   ** Number of characters in rx buffer
   */

   UINT16 iRxSize;

   /*
   ** Transmit buffer get position
   */

   UINT16 iTxGet;

   /*
   ** Number of characters in tx buffer
   */

   UINT16 iTxSize;

}
sd_DataType;


/*******************************************************************************
**
** Private Globals
**
********************************************************************************
*/

/*------------------------------------------------------------------------------
**
** sd_s
**
** Serial driver private data structure
**
**------------------------------------------------------------------------------
*/

extern sd_DataType sd_s;


/*******************************************************************************
**
** Public Services Definitions
**
********************************************************************************
*/

/*------------------------------------------------------------------------------
**
** SD_GetChar
**
** Get next character from the inbuffer
**
**------------------------------------------------------------------------------
**
** Inputs:
**    None
**
** Outputs:
**    Return     -  Read Character
**
** Usage:
**    bChar = SD_GetChar();
**
**------------------------------------------------------------------------------
*/

UINT8 SD_GetChar( void );


/*------------------------------------------------------------------------------
**
** SD_Init
**
** Initiates the serial interface
**
**------------------------------------------------------------------------------
**
** Inputs:
**    None
**
** Outputs:
**    None
**
** Usage:
**    SD_Init();
**
**------------------------------------------------------------------------------
*/

void SD_Init( void );


/*------------------------------------------------------------------------------
**
** SD_CharReceived
**
** Checks if we haver received any characters from the serial line
**
**------------------------------------------------------------------------------
**
** Inputs:
**    None
**
** Outputs:
**    Return   - TRUE   = There is a characer in the input buffer
**               FALSE  = No charakters received.
**
** Usage:
**    if( SD_CharReceived() )
**    {
**       ...
**
**------------------------------------------------------------------------------
*/

BOOL SD_CharReceived( void );


/*------------------------------------------------------------------------------
**
** SD_PutChar
**
** Sends a character on the serial line.
**
**------------------------------------------------------------------------------
**
** Inputs:
**    bByte    - Character to send
**
** Outputs:
**    None
**
** Usage:
**    SD_PutChar( bChar );
**
**------------------------------------------------------------------------------
*/

void SD_PutChar( UINT8 bByte );


/*******************************************************************************
**
** Private Services Definitions
**
********************************************************************************
*/

/*------------------------------------------------------------------------------
**
** sd_RxInterrupt
**
** Character receive interrupt
**
**------------------------------------------------------------------------------
**
** Inputs:
**    None
**
** Outputs:
**    None
**
** Usage:
**    sd_RxInterrupt();
**
**------------------------------------------------------------------------------
*/

void sd_RxInterrupt( void );


#endif  /* inclusion lock */

/*******************************************************************************
**
** End of SD.H
**
********************************************************************************
*/